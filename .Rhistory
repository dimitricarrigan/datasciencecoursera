demo()
demo()
install.packages(c("cluster", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "nlme", "nnet", "rpart", "survival"))
help.start()
q()
q()
demo()
graphics
install graphics
library(lattice) # required for the xyplot() function
# let's prepare a graphical summary of the diamonds data
# we note that price and carat are numeric variables with a strong relationship
# also cut and channel are factor variables related to price
# showing the relationship between price and carat, while conditioning
# on cut and channel provides a convenient view of the diamonds data
# in addition, we jitter to show all points in the data frame
xyplot(jitter(price) ~ jitter(carat) | channel + cut,
data = diamonds,
aspect = 1,
layout = c(3, 2),
strip=function(...) strip.default(..., style=1),
xlab = "Size or Weight of Diamond (carats)",
ylab = "Price")
# to output this plot as a pdf file we use the pdf() function and close with dev.off()
pdf("R005_plot_diamonds_lattice.pdf",width=11,height=8.5)
xyplot(jitter(price) ~ jitter(carat) | channel + cut,
data = diamonds,
aspect = 1,
layout = c(3, 2),
strip=function(...) strip.default(..., style=1),
xlab = "Size or Weight of Diamond (carats)",
ylab = "Price")
dev.off()
y <- 1
y
for (i in 1:200)
{
x <- 2^i
y <- x*y
print("i = ",i,"x = ",x,"y = ",y)
}
for (i in 1:200)
{
x <- 2^i
y <- x*y
print('i = ', i, ' x = ', x, ' y = ',y )
}
for (i in 1:200)
{
x <- 2^i
y <- x*y
print('i = ', i)
}
for (i in 1:200)
{
x <- 2^i
y <- x*y
print(x)
print(y)
}
y <- 1
for (i in 1:200)
{
x <- 2^i
y <- x*y
print(i, x, y)
}
y <- 1
for (i in 1:200)
{
x <- 2^i
y <- x*y
print(i x y)
}
for (i in 1:200)
{
x <- 2^i
y <- x*y
print(i x y)
}
x <- c(62,67,69,72,75,60,58,86,74,68,56,67,82,88,90,54,67,65,64,68)
summary(x)
mean(x)
quantile(x,0.25)
quantile(x,0.75)
setwd("C:/Users/DCARRIG0/Google Drive/Git/ds-toolbox-project")
